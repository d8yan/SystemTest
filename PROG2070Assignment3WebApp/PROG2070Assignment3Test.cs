// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class DefaultSuiteTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  [Test]
  public void testforAssignment3() {
    driver.Navigate().GoToUrl("http://localhost/index.html");
    driver.Manage().Window.Size = new System.Drawing.Size(1182, 824);
    driver.FindElement(By.LinkText("Click here to fill a car sale information")).Click();
    driver.FindElement(By.Id("btnSave")).Click();
    Assert.That(driver.FindElement(By.Id("firstNameError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("lastNameError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("addressError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("cityError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("provinceError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("pCodeError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("phoneError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("emailError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("makeError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("modelError")).Text, Is.EqualTo("Required an input"));
    Assert.That(driver.FindElement(By.Id("yearError")).Text, Is.EqualTo("Required an input"));
    driver.FindElement(By.Id("firstName")).Click();
    driver.FindElement(By.Id("firstName")).SendKeys("david");
    driver.FindElement(By.Id("lastName")).Click();
    driver.FindElement(By.Id("lastName")).SendKeys("white");
    driver.FindElement(By.Id("address")).Click();
    driver.FindElement(By.Id("address")).SendKeys("sdf ddd");
    driver.FindElement(By.Id("city")).Click();
    driver.FindElement(By.Id("city")).SendKeys("waterloo");
    driver.FindElement(By.Id("province")).Click();
    {
      var dropdown = driver.FindElement(By.Id("province"));
      dropdown.FindElement(By.XPath("//option[. = 'ONTARIO']")).Click();
    }
    driver.FindElement(By.Id("province")).Click();
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("pCode")).Click();
    driver.FindElement(By.Id("pCode")).SendKeys("s333 ");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).SendKeys("1234567890");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("email")).Click();
    driver.FindElement(By.Id("email")).SendKeys("dw@g");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("make")).Click();
    driver.FindElement(By.Id("make")).SendKeys("fiat");
    driver.FindElement(By.Id("model")).Click();
    driver.FindElement(By.Id("model")).SendKeys("124 spider");
    driver.FindElement(By.Id("year")).Click();
    driver.FindElement(By.Id("year")).SendKeys("1889");
    driver.FindElement(By.Id("btnSave")).Click();
    Assert.That(driver.FindElement(By.Id("addressError")).Text, Is.EqualTo("Invalid. Please start with number and at least two strings after and have spaces in between"));
    Assert.That(driver.FindElement(By.Id("pCodeError")).Text, Is.EqualTo("Invalid. Please enter e.g 9X9 X9X, X->letters, 9->digts"));
    Assert.That(driver.FindElement(By.Id("phoneError")).Text, Is.EqualTo("Invalid. Please enter e.g 123-123-1234 or (123)-1123-1234"));
    Assert.That(driver.FindElement(By.Id("emailError")).Text, Is.EqualTo("Invalid input"));
    Assert.That(driver.FindElement(By.Id("yearError")).Text, Is.EqualTo("Invalid. Year start with 19 or 20"));
    driver.FindElement(By.Id("address")).Click();
    driver.FindElement(By.Id("address")).SendKeys("12 king street");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.CssSelector("#infoForm tr:nth-child(6)")).Click();
    driver.FindElement(By.Id("pCode")).SendKeys("9i8j4k");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).SendKeys("123-12348904");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.Id("email")).Click();
    driver.FindElement(By.Id("email")).SendKeys("dw@gmail.com");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.CssSelector("tr:nth-child(11)")).Click();
    driver.FindElement(By.Id("year")).SendKeys("ddfd");
    driver.FindElement(By.Id("btnSave")).Click();
    Assert.That(driver.FindElement(By.Id("pCodeError")).Text, Is.EqualTo("Invalid. Please enter e.g 9X9 X9X, X->letters, 9->digts"));
    Assert.That(driver.FindElement(By.Id("phoneError")).Text, Is.EqualTo("Invalid. Please enter e.g 123-123-1234 or (123)-1123-1234"));
    Assert.That(driver.FindElement(By.Id("yearError")).Text, Is.EqualTo("Invalid. Year start with 19 or 20"));
    driver.FindElement(By.Id("pCode")).Click();
    driver.FindElement(By.Id("pCode")).SendKeys("9i8 j4k");
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).SendKeys("123-123-4890");
    driver.FindElement(By.CssSelector("tr:nth-child(11)")).Click();
    driver.FindElement(By.Id("year")).SendKeys("2019");
    driver.FindElement(By.Id("btnSave")).Click();
    Assert.That(driver.FindElement(By.Id("nameOutput")).Text, Is.EqualTo("DAVID WHITE"));
    Assert.That(driver.FindElement(By.Id("addressOutput")).Text, Is.EqualTo("12 KING STREET"));
    Assert.That(driver.FindElement(By.Id("cityOutput")).Text, Is.EqualTo("WATERLOO"));
    Assert.That(driver.FindElement(By.Id("provinceOutput")).Text, Is.EqualTo("ONTARIO"));
    Assert.That(driver.FindElement(By.Id("pCodeOutput")).Text, Is.EqualTo("9I8 J4K"));
    Assert.That(driver.FindElement(By.Id("phoneOutput")).Text, Is.EqualTo("123-123-4890"));
    Assert.That(driver.FindElement(By.Id("emailOutput")).Text, Is.EqualTo("DW@GMAIL.COM"));
    Assert.That(driver.FindElement(By.Id("vehicleInfo")).Text, Is.EqualTo("2019 FIAT 124 SPIDER"));
    {
      var element = driver.FindElement(By.Id("firstName"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).ClickAndHold().Perform();
    }
    {
      var element = driver.FindElement(By.Id("firstName"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    {
      var element = driver.FindElement(By.Id("firstName"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Release().Perform();
    }
    driver.FindElement(By.Id("firstName")).Click();
    driver.FindElement(By.Id("firstName")).Click();
    driver.FindElement(By.Id("firstName")).SendKeys("tom");
    driver.FindElement(By.Id("lastName")).Click();
    driver.FindElement(By.Id("lastName")).Click();
    {
      var element = driver.FindElement(By.Id("lastName"));
      Actions builder = new Actions(driver);
      builder.DoubleClick(element).Perform();
    }
    driver.FindElement(By.Id("lastName")).SendKeys("brown");
    driver.FindElement(By.Id("address")).Click();
    driver.FindElement(By.Id("address")).SendKeys("300 queen street");
    driver.FindElement(By.CssSelector("#infoForm tr:nth-child(4)")).Click();
    driver.FindElement(By.Id("city")).SendKeys("sydney");
    driver.FindElement(By.Id("province")).Click();
    {
      var dropdown = driver.FindElement(By.Id("province"));
      dropdown.FindElement(By.XPath("//option[. = 'BRITISH COLUMBIA']")).Click();
    }
    driver.FindElement(By.Id("province")).Click();
    driver.FindElement(By.CssSelector("#infoForm tr:nth-child(6) > td:nth-child(2)")).Click();
    driver.FindElement(By.Id("pCode")).SendKeys("8j7 e3r");
    driver.FindElement(By.Id("phone")).Click();
    driver.FindElement(By.Id("phone")).SendKeys("(456)123-4890");
    driver.FindElement(By.Id("email")).Click();
    driver.FindElement(By.Id("email")).SendKeys("tb@gmail.com");
    driver.FindElement(By.CssSelector("tr:nth-child(9)")).Click();
    driver.FindElement(By.Id("make")).SendKeys("lexus");
    driver.FindElement(By.Id("model")).Click();
    driver.FindElement(By.Id("model")).SendKeys("es");
    driver.FindElement(By.Id("year")).Click();
    driver.FindElement(By.Id("year")).SendKeys("2021");
    driver.FindElement(By.Id("btnSave")).Click();
    driver.FindElement(By.LinkText("Home Page")).Click();
    driver.FindElement(By.LinkText("Click to view list of saved information")).Click();
    driver.FindElement(By.LinkText("Home Page")).Click();
    driver.FindElement(By.LinkText("Click to view list of saved information")).Click();
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(1) > td:nth-child(2)")).Text, Is.EqualTo("DAVID WHITE"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(2) > td:nth-child(2)")).Text, Is.EqualTo("DW@GMAIL.COM"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(3) > td:nth-child(2)")).Text, Is.EqualTo("123-123-4890"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(4) > td:nth-child(2)")).Text, Is.EqualTo("12 KING STREET"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(5) > td:nth-child(2)")).Text, Is.EqualTo("WATERLOO"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(6) > td:nth-child(2)")).Text, Is.EqualTo("9I8 J4K"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(7) > td:nth-child(2)")).Text, Is.EqualTo("ONTARIO"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(1) tr:nth-child(8) > td:nth-child(2)")).Text, Is.EqualTo("2019 FIAT 124 SPIDER"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(1) > td:nth-child(2)")).Text, Is.EqualTo("TOM BROWN"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(2) > td:nth-child(2)")).Text, Is.EqualTo("TB@GMAIL.COM"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(3) > td:nth-child(2)")).Text, Is.EqualTo("(456)123-4890"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(4) > td:nth-child(2)")).Text, Is.EqualTo("300 QUEEN STREET"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(5) > td:nth-child(2)")).Text, Is.EqualTo("SYDNEY"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(6) > td:nth-child(2)")).Text, Is.EqualTo("8J7 E3R"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(7) > td:nth-child(2)")).Text, Is.EqualTo("BRITISH COLUMBIA"));
    Assert.That(driver.FindElement(By.CssSelector("table:nth-child(3) tr:nth-child(8) > td:nth-child(2)")).Text, Is.EqualTo("2021 LEXUS ES"));
  }
}
